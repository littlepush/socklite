#!/bin/sh

rm -rf dist
mkdir dist

fheader=dist/socketlite.h

# Create include header file
head -n 21 inc/socket.h > $fheader
echo "// This is an amalgamate file for socketlite" >> $fheader
echo "" >> $fheader
echo "// Current Version: "$(./version) >> $fheader
echo "" >> $fheader
echo "#pragma once" >> $fheader

headerfiles=("thread.hpp" "log.hpp" "string_format.hpp" "dns.h" "socket.h" "poller.h" "events.h" "socks5.h" "raw.h" "tcpsocket.h" "udpsocket.h")

function split_headerfile() {
	fname=$1
	sp=$(cat $fname | grep -n "#if" | head -n 1 | awk -F":" '{print $1}')
	ep=$(cat $fname | grep -n "#endif" | tail -n 1 | awk -F":" '{print $1}')
	sed -n "${sp},${ep}p" ${fname} > .tmp
	for h in ${headerfiles[@]}; do
		cat .tmp | grep -v -E "#include \"${h}\"" > .tmp1
		mv .tmp1 .tmp
	done
	cat .tmp >> ${fheader}
	rm .tmp
}

for h in ${headerfiles[@]}; do
	echo "// inc/${h}" >> $fheader
	split_headerfile inc/${h}
	echo "" >> $fheader
done

tail -n 8 inc/socket.h >> $fheader
echo "// End of amalgamate file" >> $fheader

fsource=dist/socketlite.cpp
head -n 21 inc/socket.h > $fsource
echo "// This is an amalgamate file for socketlite" >> $fsource
echo "" >> $fsource
echo "// Current Version: "$(./version) >> $fsource
echo "" >> $fsource
echo "#include \"socketlite.h\"" >> $fsource

sourcefiles=("dns.cpp" "socket.cpp" "poller.cpp" "events.cpp" "socks5.cpp" "raw.cpp" "tcpsocket.cpp" "udpsocket.cpp")

function split_sourcefile() {
	fname=$1
	f=$(basename ${fname})
	f=${f%%.*}
	sp=$(cat $fname | grep -n "#include \"${f}.h\"" | awk -F":" '{print $1}')
	sp=$((sp+1))
	ep=$(cat $fname | wc -l)
	sed -n "${sp},${ep}p" $fname > .tmp
	for h in ${headerfiles[@]}; do
		cat .tmp | grep -v -E "#include \"${h}\"" > .tmp1
		mv .tmp1 .tmp
	done
	cat .tmp >> ${fsource}
	rm .tmp
}

for c in ${sourcefiles[@]}; do
	echo "// src/${c}" >> $fsource
	split_sourcefile src/${c}
	echo "" >> $fsource
done
echo "// End of amalgamate file" >> $fsource

